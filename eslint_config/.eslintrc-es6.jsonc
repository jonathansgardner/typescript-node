{
	"rules": {
		/* eslint:recommended */
		// "constructor-super": "error",										/* require `super()` calls in constructors */
		// "no-class-assign": "error",										/* disallow reassigning class members */
		// "no-const-assign": "error",											/* disallow reassigning `const` variables */
		// "no-dupe-class-members": "error",								/* disallow duplicate class members */
		// "no-new-symbol": "error",												/* disallow `new` operators with the `Symbol` object */
		// "no-this-before-super": "error",								/* disallow `this`/`super` before calling `super()` in constructors */
		// "require-yield": "error",											/* require generator functions to contain `yield` */

		"arrow-body-style": "error",											/* require braces around arrow function bodies */
		"arrow-parens": [																	/* require parentheses around arrow function arguments */
			"error",
			"as-needed"
		],
		"arrow-spacing": "error",													/* enforce consistent spacing before and after the arrow in arrow functions */
		"generator-star-spacing": [												/* enforce consistent spacing around `*` operators in generator functions */
			"error",
			{
				"before": false,
				"after": true
				}
		],
		"no-confusing-arrow": "off",											/* disallow arrow functions where they could be confused with comparisons */
		"no-duplicate-imports": [													/* disallow duplicate module imports */
			"error",
			{ "includeExports": true }
		],
		"no-restricted-exports": "off",										/* disallow specified names in exports */
		"no-restricted-imports": "off",										/* disallow specified modules when loaded by `import` */
		"no-useless-computed-key": [											/* disallow unnecessary computed property keys in objects and classes */
			"error",
			{ "enforceForClassMembers": true }
		],
		"no-useless-constructor": "warn",									/* disallow unnecessary constructors */
		"no-useless-rename": "error",											/* disallow renaming import, export, and destructured assignments to the same name */
		"no-var": "error",																/* require `let` or `const` instead of `var` */
		"object-shorthand": "error",											/* require or disallow method and property shorthand syntax for object literals */
		"prefer-arrow-callback": "error",									/* require using arrow functions for callbacks */
		"prefer-const": "error",													/* require `const` declarations for variables that are never reassigned after declared */
		"prefer-destructuring": [													/* require destructuring from arrays and/or objects */
			"error",
			{
					"array": true,
					"object": true
			},
			{ "enforceForRenamedProperties": false }
		],
		"prefer-numeric-literals": "error",								/* disallow `parseInt()` and `Number.parseInt()` in favor of binary, octal, and hexadecimal literals */
		"prefer-rest-params": "error",										/* require rest parameters instead of `arguments` */
		"prefer-spread": "error",													/* require spread operators instead of `.apply()` */
		"prefer-template": "error",												/* require template literals instead of string concatenation */
		"rest-spread-spacing": "error",										/* enforce spacing between rest and spread operators and their expressions */
		"sort-imports": [																	/* enforce sorted import declarations within modules */
			"error",
			{
				"memberSyntaxSortOrder": [
					"single",
					"all",
					"multiple",
					"none"
				],
				"allowSeparatedGroups": true
			}
		],
		"symbol-description": "error",										/* require symbol descriptions */
		"template-curly-spacing": [												/* require or disallow spacing around embedded expressions of template strings */
			"error",
			"always"
		],
		"yield-star-spacing": "error"											/* require or disallow spacing around the `*` in `yield*` expressions */
	}
}